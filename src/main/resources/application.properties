spring.application.name=demo
spring.datasource.url=jdbc:postgresql://localhost:5432/demo
spring.datasource.username=postgres
spring.datasource.password=test123
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
server.error.include-message=always


# benefit of spring.jpa.hibernate.ddl-auto=update

#this will allow direct changes in database from entity without need of writing sql queries.
#With ddl-auto=update, Hibernate automatically updates the database schema based on your entity classes.
# You don?t need to handle schema creation or updates manually.
#Using JPA repositories (like JpaRepository), you get many built-in methods for common CRUD operations without needing to write boilerplate code.
#JPA provides a convenient way to map Java objects (entities) to database tables, handling relationships (like one-to-many, many-to-many) automatically.


#When using JdbcTemplate, you need to manually handle the creation of tables in the database, as JdbcTemplate does not provide automatic schema management
# like JPA/Hibernate. You typically write SQL statements to create the necessary tables directly in your DAO or a setup script.

